apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: cluster-api-provider-gardener
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: v1
kind: Secret
metadata:
  name: gardener-kubeconfig
data:
  kubeconfig: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSQ1ZFTkRRV1V5WjBGM1NVSkJaMGxKV1c0eWFESlVMMVIxVm5kM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEdWRVZVVFVKRlIwRXhWVVVLUVhoTlMyRXpWbWxhV0VwMVdsaFNiR042UVdWR2R6QjVUbFJCZWsxVVRYZFBSRkUwVGtSQ1lVWjNNSHBPVkVGNlRWUkZkMDlFVlhwT1JFSmhUVUpWZUFwRmVrRlNRbWRPVmtKQlRWUkRiWFF4V1cxV2VXSnRWakJhV0UxM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGRuWjBWTENrRnZTVUpCVVVSQk5XNXJjV3hDY1U5MldUVllUWGxFVTJWT05UbEZWa1UyZGtSRWVtSlVOMVpIWkVGSlFVUnhUemRaWWpaUlRIWTRTVlZPY0ROcGQxQUtNMHhhWmpOdGJURktjVnBEWjFCUmFrZEZNVk5aY0VwNFptaHdRbTFLV0dWdGVtNURSU3MwVnpBMVIwNDNkMk4wYm1kRmFubGlaVFZwTTFKQk9FazNVZ3BHZFdWU2RIZ3djMjFDZDI1TFNIVjJWamxPVEZScmF6VmlLMk5rV1cxWlRUUm9TVE5aYmxsTVlsWjBiRWRIWVc5cE5tNUxhbGxLUmpJelZqQTRVMjB2Q20xWk5VdHJPRkJCTlRjeFZuRjJWWE5RUldwTlRXaGhPR2hGT0c0M01qQTVTakl2TVdGV1pqTmlXVkpYWVhkU00wOUZVakpyVGlzd01Ia3dlR2hyVjI4S1JEWjZXVEI1VUZFNVNVWk9SamhzTjFwb2QxVlRZMlpvV2tWRlVYcHpNR3czWm5SM2VDOUlhSEJEWnpWSGFuTmxOVU5PT1VNMll6TTFNR3RGTVdSeU1ncDBha3N3U0hsRVRsSktXWEpOYW5oWlp6RnlSRlZ0V1hJelMzUndRV2ROUWtGQlIycFhWRUpZVFVFMFIwRXhWV1JFZDBWQ0wzZFJSVUYzU1VOd1JFRlFDa0puVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1JFWjFGWFFrSlNjMU56UzFSbFJHNHZTMEZqUld4NmFuUktUREZ0WldSRkx6UjZRVllLUW1kT1ZraFNSVVZFYWtGTloyZHdjbVJYU214amJUVnNaRWRXZWsxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUTI5amFEVndkbXBITUFwMlVtNTFhMnc0WmtkemNtaHNLM3B4YjBZNVdVVmFaa1l6U0U5eFZ6Z3hPSEl3VTBOelFVZDVhMGg1T0VsaWMxcE1lRWM1TkhweUx6SktkV2xRVFZWR0NsTk5aekZMYm1OcGJEaEtObVpJTUZGRUwzTktlbFp6TjNseVJUUmtXSFZYV1NzM09DOU5MMDgxUWxoVFZHdDVXV3BpZGxod1dsVkZWSHBVWkRKdVVsQUtaMmxEVlU5MVUyNVhXQzlaZERodlFXVkhNbkZTTmtGcFF6bDJhRVU0YjB0RGRscEdiV1o1Wm1aWWVqRm1PRFl4VjBOQ09ESkxOSFY2ZG1JemRHY3pTUXBSUldoNWJqQm9ORVpKV0RKa1JtbGlWa2hDUTA5bU4yMXRlak15VUN0SU4xSlRSRnBpYkdodVFtNW9PREZoVlZaS1RWSTNiV3RZYTI1eWVHaEtLMWsyQ2tKQk9GWXZkbkJVWjJSaVlUVTFTVGd4TUc1dlltcFNiakUyVmsxWVYwZHdabkJyUW1reVVHeHZkemxyVm1sSVJFSnVhVEpwUVZGWlYwc3lOMWd6UzJFS1ZWQjBjMGQ0U0VGdlEwMXRDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly8xMjcuMC4wLjE6NTE2OTcKICBuYW1lOiBraW5kLWdhcmRlbmVyLWxvY2FsCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBraW5kLWdhcmRlbmVyLWxvY2FsCiAgICB1c2VyOiBraW5kLWdhcmRlbmVyLWxvY2FsCiAgbmFtZToga2luZC1nYXJkZW5lci1sb2NhbApjdXJyZW50LWNvbnRleHQ6IGtpbmQtZ2FyZGVuZXItbG9jYWwKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBraW5kLWdhcmRlbmVyLWxvY2FsCiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSTFZFTkRRV2hIWjBGM1NVSkJaMGxKV1Zwd1VrTnlhWFJyTkVWM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEdWRVZVVFVKRlIwRXhWVVVLUVhoTlMyRXpWbWxhV0VwMVdsaFNiR042UVdWR2R6QjVUbFJCZWsxVVRYZFBSRkUwVGtSQ1lVWjNNSGxPYWtGNlRWUk5kMDlFVlhwT1JFSmhUVVIzZUFwSWVrRmtRbWRPVmtKQmIxUkdiWFF4V1cxV2FGcEhNRFpaTW5neFl6TlNiR05wTVdoYVJ6RndZbTVOZUVkVVFWaENaMDVXUWtGTlZFVkhkREZaYlZaNUNtSnRWakJhV0UxMFdWZFNkR0ZYTkhkblowVnBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrRlJWVUZCTkVsQ1JIZEJkMmRuUlV0QmIwbENRVkZETjJsNFYzVUtNRFZLUjJZNVJYZFRMM0ZJZFVvdlMxWlRZamhYUzBwTVZqZFFVbXdyVnpZcmMxaERPVTFMUkROVldIVkpTMWN2ZW05NUx6UnNPRGgwVUVaa1YxQk5jUXBCYkdocVVGUXljMU5CVVRjemMxUjNjMjkzUjFobVNIcFFUMnQ0U2xWMVNGUnVkblYxWlZOTE1saDFabkZ4ZFRWV1ltcFRPV3hsZDJsS1lXWlZPRUoxQ2tnclRUWTJjMWhoYnpKS2NrOW5PRlJWZFUxNWFtTm1WVXRFVlZkaVlWcHlhbkZYY2xoRmIzcHhSa05IVGxSb1JIZzNjemR0YXk5WmFGcFlPR1ZKYzBjS0syUmlXWHBrVVU5T2RYb3JORTloTVVneVJtOVhiakl5UjI5RlJUbHpkMmhGY0hWWUwzaE5XRk4yTDJObFZITnlhVFpLVmpsS00waG1jRmxNVFc5TFRBcEZSWFZKZWpkMFRrdFBWbXBhTWpCSldVbHhWV3MxWW0xaU5WUnpiMGxJWkZGMlNtbFlTRGMxSzFReVJuUkhjVFkwZFRGWlpHRm5iREJ3TVdRdk1HTTVDall2Um1oUUwxSkZabEY1TlRVeGJHNUJaMDFDUVVGSGFsWnFRbFZOUVRSSFFURlZaRVIzUlVJdmQxRkZRWGRKUm05RVFWUkNaMDVXU0ZOVlJVUkVRVXNLUW1kbmNrSm5SVVpDVVdORVFXcEJUVUpuVGxaSVVrMUNRV1k0UlVGcVFVRk5RamhIUVRGVlpFbDNVVmxOUW1GQlJrZDRTM2R3VGpSUFpqaHZRbmRUV0FwUFR6QnJkbGRhTlRCVUwycE5RVEJIUTFOeFIxTkpZak5FVVVWQ1EzZFZRVUUwU1VKQlVVSlNjVXhGUVRCaFVWVkRMMnMyVEVRNGVFSkJVVkF4VDNWVkNqSjBPVlJtTVVJNVRXRlVkbWQ2U1cxeE9VWlNjbVJqWlV4MFF6aHBSRFZQUmpGalVHRXZLM2RGTlZSeldGSk9jR0ZOTUZOMk4wVTNVMjh2VEhaRlMyNEtXbHBMY0doRE1sZFVTM0EyZW0xNFQzcDRTbk5EUmxSRFpuRnRjVVpHUzBkbFZFNUhNSHBWYld0YVkyVTBTalpUYVhNelFrbGFVVFZOVkhOcFVrRlZiZ3B2Ym5sMlpFMVJWVE5HV1hWU1pWWnNibFpNVDNSMVFURjJSalJIZG1GWWVtRXpUekpFWjNCSWVGTkVRVmx4VjBkTlYyazRWRVpMYTJ3MlVHZG5MMU5WQ210emNIVjFSM04yY0VkRU5tVXhNbXhXUVUwMVVGbDFRV2RsV1VJeGVXVkNabFF2WkcxSVoyRjVjRTV3VDBoM2NIRjZOVUZLUjBzMlZuWmxaakoxUW5vS1NYVkRlVTVNTkZONVlsaFVSWGQ1YlV0V1JITkxUR1l6U0RSWVlWSTViMmRRTWpOU2QwczNSRXBDUVRJeE5EazNUV2xMTUdkMGNGaFFZVWN2Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNFRkpRa0ZCUzBOQlVVVkJkVFJ6Vm5KMFQxTlNiaTlTVFVWMk5tZzNhV1o1YkZWdEwwWnBhVk14Wlhvd1dtWnNkWFp5Um5kMlZFTm5PVEZHQ2pkcFEyeDJPRFpOZGl0S1psQk1WSGhZVm1wNlMyZEtXVmw2TURseVJXZEZUemszUlRoTVMwMUNiRE40T0hwNmNFMVRWa3hvTURVM04zSnVhMmwwYkRjS2JqWnhjblZXVnpRd2RscFljMGxwVjI0eFVFRmlhQzlxVDNWeVJqSnhUbWxoZW05UVJURk1hazF2TTBneFEyY3hSbTB5YldFME5teHhNWGhMVFRab1VRcG9hbFUwVVRobE4wODFjRkF5U1ZkV0wwaHBURUoyYmxjeVRUTlZSR3BpY3k5MVJHMTBVamxvWVVad09YUm9jVUpDVUdKTlNWSkxZbXd2T0ZSR01ISXZDak5JYXpkTE5IVnBWbVpUWkhnek5sZERla3REYVhoQ1RHbE5LemRVVTJwc1dUSmtkRU5IUTB0c1NrOVhOVzByVlRkTFEwSXpWVXg1V1d4NEt5dG1hemtLYUdKU2NYVjFUSFJYU0ZkdlNtUkxaRmhtT1VoUVpYWjRXVlF2TUZKSU1FMTFaV1JhV25kSlJFRlJRVUpCYjBsQ1FWRkRabFU1YWpJM2NqRmtZMWRrU2dweVlreEpjbEIyY21wQk5GUTBhMVF5TVhsd2IxUk1RMW9yYTFGaGFsa3ZXRTFTZDJjMGRFZE9jM2s1TWsxU05GSXhMMDFoUWl0RFJtUjJjV0ZVVFZCb0NsbHJiR1ZvTjBsMVpuSkdhRVV4ZW1rNVdVNTZRV2xyTldGV056Sm5RM29yU0ZObVpXcE5UbHBNT0RsWFVXNTRZU3RLT1d3cmJWRklObk5XUlVnMFNUVUtZbWRpUmpZNGR6QTRXREJrVkUxQ1VYRkdkalZyZFhkSloyMWhVM1prZWxZMVJXZE5jRzlNYkc4ek1HcGthRE5TUTJVdkx6Vk5Na3RISzJrMGNXMW9VQXA1YjJWTFdFbEVNWE4yYWxScFRqWmFMMkp3ZVVJNFl6aDZVVkZLV2lzelVGcExOMkV2ZDJWc01HRndZakJoVTNCSlNqSlhNRUpRTlhsM1NrWklSV3BYQ20xbVQzcHlWWGhqUm05S2NsQnhRVzF0YWsxWlFqUk1MeXREVFcxTlEwTlpRWFpsUjAxRmFuUkNNemxFVjFoU1FtUkNSSEIyYzFsaFQwMU5hMlE1UTJrS1FuSmhSVzk1VFZKQmIwZENRVkJyYzJaWmIwMUdReTgyTlU5TVNIVlFiRVJpUldkeGFtaFNRMll4T1VRNU5GTkRTa28wZUdkVk1XbEdNVmhzY2tzd1FncHphSE0zTDFoVVdrZGtTRTlOVURkRFEyVlRaVVZTYkZoSWVXSmFXbGRzUjBSTVF6aHhjMGxrVkhGaFowRXpaM2R0YWtGSFNtVnFSa0ZKTVdsTFdsRmFDbGxKWkVOd2JIWndTVUZKU1hRMVRDOUhSRnBSU0M5elJWVlpNMFZ3YW01alVrWmljMnQ2VlcxTUwyTXdWbkZOVjJac1ZrNVZWRUV2UVc5SFFrRk5RM1VLV0dOdmVGTlRZa3g0TVhkd1VDczViRUZFV2paSGRYUjZUbXhGZEU5NVJreHdRMVJtZDFnMFRWbHNOa2hYVDJWQloyd3hhall4VFRrd1dVazJabVE0ZGdwRlQzTXdkRXRQV2t3NWRVeGpSR1ZwU1VSblZUVTVNRlJHWWpZeVduUTFVVEozUm1wamQyeFNTRlEwZFZSaFpGRm9LM1pMVFcxQ1pWUndNQ3Q2ZVM5dkNqQm1OalJvUkdzeVZrVkhUbk5TVHpCSVNuVkxPRzFJVDNJdlMwVjZORWxxY2xCUlNtcFplbHBCYjBkQldYbENiamhRZEU1TVMyeE1WbFY2VUUxYWNUVUtRVko1Y3pKVVNqZExXazFKWWxKaE5VdHdXRmhOYzI1TVRITnFiMGxSZFVSd05FZ3JSM1paYWxveWRqTTBaVWRtZG1WMVJVMWxhVTgxUVRKdldXNUZWQXB4TVhacVRYTlpiQ3N2VHpoaVduZHZUM1ZMTTFGb2NtUldWMGQyTWs1TlpuRTJMMEZNZFVKWVl6TmxNRlZETldKdE15OVZkVk12UjI5bVpWSnBXVTEyQ2xSTlZtYzJjM1lyVjFGSWFGWmFRV3hSYUc4MFMyeEZRMmRaUVhSeVIyVkNSMVZQT0RGWmMzaFdibTVaVm01dVFtTkNjRmhsTlRCQ2FYaFpPRWt3UlVzS2JVcDFNazVHZEZKRGQxcFNRV2MxYXpoME1rTm5kVWhhTWl0SFoyVlFhWEYxU0dsc1YzaGxWVVpETmt0cldIcFFjbTE2ZWpRMlZrRTJkRE5vYW5kelN3b3ZhbUo2YlRJeWVVbHhiVE52YjJoR2NGVXhhSFZLYTNJdmQzQXZNR1JIVG1KMFIzY3JhV0p2ZW5oNVRtcHBSa1kwV2pkdkwyMVRTWFZYUTNrcldpOTVDbnBTZW01eFVVdENaMUZEVTFwWVdXbGlNVVk0ZERWTVRIbFZOVEJWZVVRd1prbHVWMk14V1RoU1JHTnFNeTgyZFRoaVVscGtNa1pLU0hKeloxTlNXVTRLYVRGNU5IUjJNa05YVUVnMVVHdFBjRlZDUVRCeVVtVmpZVXRvV1d4RE56QnJTVWxCSzJGSFN6aENRV3RHYzNKc2VUWmpWRkpXVEVjeVRpdEZhemhyVkFwWE56RkxSMjFITDA4NGRWWTJiVXRKTUhOa1pUVmhTRE1yV1d4MVdXeFpTVFp0YkhrelNFOUxTbkZzVkRFelNrSXJkVGdySzBFOVBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: cluster-api-provider-gardener
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: cluster-api-provider-gardener
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: cluster-api-provider-gardener
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        # Projects are configured by default to adhere to the "restricted" Pod Security Standards.
        # This ensures that deployments meet the highest security requirements for Kubernetes.
        # For more details, see: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
          - --leader-elect
          - --health-probe-bind-address=:8081
          - --gardener-kubeconfig=/etc/gardener-kubeconfig/kubeconfig
        image: localhost:5001/cluster-api-provider-gardener/controller:latest
        name: manager
        ports: []
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
          - name: gardener-kubeconfig
            mountPath: /etc/gardener-kubeconfig
      volumes:
        - name: gardener-kubeconfig
          secret:
            secretName: gardener-kubeconfig
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
